name: Docker Image (release) CI

on:
  push:
    tags: [ '*' ]

jobs:

  dockerimage-release:

    runs-on: ubuntu-latest

    steps:
      # - name: Checkout
      #   uses: actions/checkout@v2

      # # https://github.community/t5/GitHub-Actions/How-to-get-just-the-tag-name/m-p/32167/highlight/true#M1027
      # - name: Extract version from tag reference
      #   id: get_version
      #   run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}

      # - name: Dockerhub login
      #   env:
      #     DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      #     DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      #   run: |
      #     echo "${DOCKER_PASSWORD}" | docker login --username ${DOCKER_USERNAME} --password-stdin

      # - name: Set up Docker Buildx
      #   id: buildx
      #   uses: crazy-max/ghaction-docker-buildx@v1
      #   with:
      #     version: latest

      #      - name: Remove builder
      #        if: always()
      #        run: docker buildx rm builder || true

      #      - name: Available platforms
      #        run: echo ${{ steps.buildx.outputs.platforms }}

      # https://github.com/marketplace/actions/checkout
      - name: Checkout
        uses: actions/checkout@v2

      # https://github.com/marketplace/actions/docker-setup-qemu
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      # https://github.com/marketplace/actions/docker-setup-buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      # https://github.com/marketplace/actions/docker-login
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # https://github.com/marketplace/actions/build-and-push-docker-images
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          platforms: linux/amd64,linux/arm64,linux/arm/v6,linux/arm/v7
          build-args: VERSION=${{ github.event.release.tag_name }}
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/python-github-backup:${{ github.event.release.tag_name }}

      # - name: Buildx and push
      #   env:
      #     DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      #     VERSION: ${{ steps.get_version.outputs.VERSION }}
      #   run: |
      #     docker buildx build \
      #     --platform linux/amd64,linux/arm/v6,linux/arm/v7,linux/arm64 \
      #     --output "type=image,push=true" \
      #     --file ./Dockerfile . \
      #     --build-arg VERSION=${{ github.event.release.tag_name }} \
      #     --tag ${DOCKER_USERNAME}/python-github-backup:${VERSION}

      - name: Send Slack Notification
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
